<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[vimdiff]]></title>
    <url>%2F2019%2F01%2F08%2Fvimdiff%2F</url>
    <content type="text"><![CDATA[##实用的vim下比较两个文件命令： ###1、 vimdiff file1 file2终端下输入该命令进入vim，垂直分隔窗口进行比较 ###2、 vimdiff -o file1 file2水平分隔窗口进行比较 ###3、 ctrl+w (j,k,h,l)上下左右切换光标所在的窗口（括号中表示可以是其中之一，按下ctrl+w，放开ctrl再按j,k,h,l） ###4、 ctrl+w (J,K,H,L)上下左右移动光标所在窗口的位置 ###5、 zo 和 zc打开折叠区 和 关闭折叠区 ###6、 ]c 和 [c将光标移动到下一个不同区 和 上一个不同区 ###7、 do 和 dp将光标所在不同区域同步为另一个文件该位置的内容 和 将光标所在不同区域内容同步到另一个文件该位置 ###8、 :diffu[!]vim下更新当前比较窗口，比较状态下修改文件后，可调用该命令[中括号不为命令部分，如果加!表示如果外部修改了文件，则重新加载比较] ###9、 :diffo[!]vim下关闭当前窗口比较状态，如果加!则关闭所有窗口的比较状态 ###10、:diffs file1vim下加入file1和当前光标所在窗口进行比较，水平分隔窗口 ###11、:vert diffs file1vim下加入file1和当前光标所在窗口进行比较，垂直分隔窗口 ###12、:difftvim下将光标所在窗口变为比较窗口 ##其它技巧： ###1、 diff -u file1 file2 &gt; file3终端下输入该命令，可以将file1和file2的比较结果输出到file3中，-u 表示以合并格式比较，-c 为上下文格式，不加为一般格式]]></content>
      <categories>
        <category>vimdiff</category>
      </categories>
      <tags>
        <tag>vimdiff</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mac iTerm使用]]></title>
    <url>%2F2018%2F12%2F20%2FiTerm%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Mac iTerm终端使用 标签新建标签：command + t 关闭标签：command + w 切换标签：command + 数字 command + 左右方向键 切换全屏：command + enter 查找：command + f 分屏垂直分屏：command + d 水平分屏：command + shift + d 切换屏幕：command + option + 方向键 command + [ 或 command + ] 查看历史命令：command + ; 查看剪贴板历史：command + shift + h 其他清除当前行：ctrl + u 到行首：ctrl + a 到行尾：ctrl + e 前进后退：ctrl + f/b (相当于左右方向键) 上一条命令：ctrl + p 搜索命令历史：ctrl + r 删除当前光标的字符：ctrl + d 删除光标之前的字符：ctrl + h 删除光标之前的单词：ctrl + w 删除到文本末尾：ctrl + k 交换光标处文本：ctrl + t 清屏1：command + r 清屏2：ctrl + l]]></content>
      <categories>
        <category>Mac iTerm</category>
      </categories>
      <tags>
        <tag>Mac iTerm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[account]]></title>
    <url>%2F2018%2F12%2F16%2Faccount%2F</url>
    <content type="text"><![CDATA[git账号管理代码账号12username:good-leafmail:rwzgnyyj 软件账号12username:yangyajun-softmail:yangyajun_c]]></content>
  </entry>
  <entry>
    <title><![CDATA[hexo 安装]]></title>
    <url>%2F2018%2F12%2F14%2Fhexo%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[git设置12git config --global user.name "good-leaf"git config --global user.email "rwzgnyyj@xxx.com" hexo安装1234567npm install -g hexo-clicdhexo init blogcd blognpm installhexo servernpm install --save hexo-deployer-git hexo配置添加git地址：使用ssh时，需要将本机ssh key添加到github上，并且选择ssh访问方式。1234deploy: type: git repo: git@github.com:good-leaf/good-leaf.github.io.git branch: master 修改端口：vi _config.yml1234server: port: 4001 compress: true header: true 搜索支持：1234567npm install hexo-generator-searchdb --savesearch: path: search.xml field: post format: html limit: 10000 更换主题：访问页面显示123456789101112extends partial/layoutblock container include mixins/post +posts()block pagination include mixins/paginator +home()block copyright include partial/copyright 解决：npm install –save hexo-renderer-jade]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[rabbitmq安装]]></title>
    <url>%2F2018%2F12%2F14%2Frabbitmq%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[版本：rabbitmq-server-3.6.6-1.el6.noarch.rpm 1234567891011121314151617181920212223242526sudo sucd /tmp &amp;&amp; wget https://yangyajun-soft.github.io/rabbitmq3.6.6/rabbitmq-server-3.6.6-1.el6.noarch.rpmyum install -y rabbitmq-server-3.6.6-1.el6.noarch.rpmchown rabbitmq:rabbitmq /etc/rabbitmqexit# set cookiesudo su rabbitmqecho cookie &gt; /var/lib/rabbitmq/.erlang.cookiechmod u=r,g=,o= /var/lib/rabbitmq/.erlang.cookiewget https://yangyajun-soft.github.io//rabbitmq3.6.6/rabbitmq.config -O /etc/rabbitmq/rabbitmq.config# startrabbitmq-server -detached# join clusterrabbitmqctl stop_apprabbitmqctl join_cluster rabbit@hostrabbitmqctl start_app# configrabbitmqctl set_policy ha-backup "^" '&#123;"ha-mode":"exactly", "ha-params":2, "ha-sync-mode":"automatic"&#125;'rabbitmq-plugins enable rabbitmq_management# add adminrabbitmqctl add_user admin passwordrabbitmqctl set_permissions -p "/" admin '.*' '.*' '.*'rabbitmqctl set_user_tags admin administrator# add userrabbitmqctl add_user user passwordrabbitmqctl set_permissions -p "/" user '.*' '.*' '.*']]></content>
      <categories>
        <category>rabbitmq</category>
      </categories>
      <tags>
        <tag>rabbitmq</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[redis安装]]></title>
    <url>%2F2018%2F12%2F14%2Fredis%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[版本：redis-3.2.8-1.el6.remi.x86_64.rpm 123456789101112131415161718sudo sucd /tmp &amp;&amp; wget https://yangyajun-soft.github.io/redis/redis-3.2.8-1.el6.remi.x86_64.rpmyum install -y redis-3.2.8-1.el6.remi.x86_64.rpmsu sankuaimkdir -p /opt/xxx/apps/rediscd /opt/xxx/apps/redis## 6379mkdir -p /opt/xxx/appdatas/redis6379wget https://yangyajun-soft.github.io/redis/redis_6379_3.conf -O 6379.confredis-server /opt/xxx/apps/redis/6379.conf## 6380mkdir -p /opt/xxx/appdatas/redis6380wget https://yangyajun-soft.github.io/redis/redis_6380_3.conf -O 6380.conf## 6381mkdir -p /opt/xxx/appdatas/redis6381wget https://yangyajun-soft.github.io/redis/redis_6381_3.conf -O 6381.confexitexit]]></content>
      <categories>
        <category>redis</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
</search>
